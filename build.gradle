// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'

        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    ext.versions = [
        dagger: '2.20',
        appcompat: '1.1.0',
        room: '2.2.3',
        navigation: '2.2.1',
        retrofit: '2.7.1',
        supportLibrary : '1.0.0',
        material: '1.2.0-alpha04',
        lifecycle: '2.2.0',
        lifecycle_arch: '1.1.1',
        glide: '4.11.0',
        okhttp : '3.12.5',
        recyclerview : '1.1.0',
        constraint_layout : '1.1.3',

        minSdkVersion : '18',
        targetSdkVersion : '29',
        versionCode : '1',
        versionName : '1.0',

        compileSdkVersion: '29',
        buildToolsVersion : '29.0.2',

        mockito: '2.7.22',
        junitTestImp: '4.13',
        junitAndroidTestImp: '1.1.1',
        espressoAndroidTestImp: '3.2.0',

        rxJava: '2.1.9',

        javaxAnnotation: '1.0',
        javax: '1'


    ]

    ext.deps = [
        dagger: [
                dagger : "com.google.dagger:dagger:${versions.dagger}",
                daggerCompiler : "com.google.dagger:dagger-compiler:${versions.dagger}",
                daggerAndroid : "com.google.dagger:dagger-android:${versions.dagger}",
                daggerAndroidSupport : "com.google.dagger:dagger-android-support:${versions.dagger}",
                daggerAndroidProcessor : "com.google.dagger:dagger-android-processor:${versions.dagger}"
        ],
        supportLibrary: [
                androidxLegacyV4 : "androidx.legacy:legacy-support-v4:${versions.supportLibrary}"
        ],
        appcompat: [
                appcompat : "androidx.appcompat:appcompat:${versions.appcompat}"
        ],
        room : [
                roomCompiler : "androidx.room:room-compiler:${versions.room}",
                roomRuntime : "androidx.room:room-runtime:${versions.room}"
        ],
        navigation : [
                navigationFragment : "androidx.navigation:navigation-fragment:${versions.navigation}",
                navigationUI : "androidx.navigation:navigation-ui:${versions.navigation}"
        ],
        retrofit : [
                retrofit : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
                gsonConverter : "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
        ],
        material : [
                material : "com.google.android.material:material:${versions.material}"
        ],
        lifecycle : [
                lifecycleExtension : "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}",
                lifecycleArch : "android.arch.lifecycle:extensions:${versions.lifecycle_arch}"
        ],
        glide : [
                glide : "com.github.bumptech.glide:glide:${versions.glide}"
        ],
        okhttp : [
                loggingInterceptor : "com.squareup.okhttp3:logging-interceptor:${versions.interceptor}"
        ],
        recyclerview : [
                recycleView : "androidx.recyclerview:recyclerview:${versions.recyclerview}"
        ],
        constraint_layout : [
                constraintLayout : "androidx.constraintlayout:constraintlayout:${versions.constraint_layout}"
        ],
        testing: [
                mockito: "org.mockito:mockito-core:${versions.mockito}",
                mockitoAndroid: "org.mockito:mockito-android:${versions.mockito}",
                coreLibTest: "androidx.test:core:${versions.junitAndroidTestImp}",
                junitTestImp: "junit:junit:${versions.junitTestImp}",
                junitAndroidTestImp: "androidx.test.ext:junit:${versions.junitAndroidTestImp}",
                espressoAndroidTestImp: "androidx.test.espresso:espresso-core:${versions.espressoAndroidTestImp}"
        ],
        rxJava: [
                rxJava: "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
        ],
        javaxAnnotation: [
                javaxAnnotation: "javax.annotation:jsr250-api:${versions.javaxAnnotation}",
                javaxInject:      "javax.inject:javax.inject:${versions.javax}"
        ]
    ]
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
